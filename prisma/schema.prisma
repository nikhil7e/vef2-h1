// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// einmitt núna er bara eitt category per item!
model items {
  id                    Int         @id @default(autoincrement())
  name                  String      @unique
  category              category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId            Int
  firstOptionQuestions  questions[] @relation("FirstItem")
  secondOptionQuestions questions[] @relation("SecondItem")
  imageURL              String
  createdAt             DateTime?   @default(now())
  updatedAt             DateTime?   @updatedAt
}

model questions {
  id                          Int       @id @default(autoincrement())
  firstItem                   items     @relation(name: "FirstItem", fields: [firstItemId], references: [id], onDelete: Cascade)
  secondItem                  items     @relation(name: "SecondItem", fields: [secondItemId], references: [id], onDelete: Cascade)
  firstItemId                 Int
  secondItemId                Int
  category                    category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId                  Int
  firstOptionAnsweredUsers    users[]   @relation(name: "FirstOption")
  secondOptionAnsweredUsers   users[]   @relation(name: "SecondOption")
  firstOptionAnsweredUserIds  Int[]
  secondOptionAnsweredUserIds Int[]
  createdAt                   DateTime? @default(now())
  updatedAt                   DateTime? @updatedAt
}

// ef við deleteum user eyðast svörin þeirra ekki eins og er!
model users {
  id                               Int         @id @default(autoincrement())
  admin                            Boolean     @default(false)
  username                         String      @unique
  password                         String
  score                            Int         @default(0) // skoða betur
  firstOptionAnsweredQuestions     questions[] @relation(name: "FirstOption")
  secondOptionAnsweredQuestions    questions[] @relation(name: "SecondOption")
  firstOptionAnsweredQuestionsIds  Int[]
  secondOptionAnsweredQuestionsIds Int[]
  createdAt                        DateTime?   @default(now())
  updatedAt                        DateTime?   @updatedAt

  // number         String      @unique
  // name           String      @unique
  // units          Float
  // semester       String
  // level          String?
  // url            String?
  // department     departments @relation(references: [slug], fields: [departmentSlug], onDelete: Cascade)
  // departmentSlug String
  // slug           String      @unique
}

model category {
  id           Int         @id @default(autoincrement())
  items        items[]
  questions    questions[]
  name         String      @unique
  description  String
  questionText String
  createdAt    DateTime?   @default(now())
  updatedAt    DateTime?   @updatedAt
  // number         String      @unique
  // name           String      @unique
  // units          Float
  // semester       String
  // level          String?
  // url            String?
  // department     departments @relation(references: [slug], fields: [departmentSlug], onDelete: Cascade)
  // departmentSlug String
  // slug           String      @unique
}
